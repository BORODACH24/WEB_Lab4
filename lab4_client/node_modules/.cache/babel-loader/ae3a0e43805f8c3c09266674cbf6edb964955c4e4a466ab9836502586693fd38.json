{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\source\\\\repos\\\\5 semester\\\\WEB\\\\lab4_client\\\\src\\\\components\\\\News Components\\\\NewsForm\\\\NewsForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport classes from \"./NewsForm.module.css\";\nimport { useFetching } from \"../../../hooks/useFetching\";\nimport NewsService from \"../../../API/NewsService\";\nimport { Context } from \"../../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsForm = ({\n  setVisible\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(Context);\n  const [newsletter, setNewsletter] = useState({\n    // Initialize with your POST data\n    title: '',\n    summary: '',\n    main_part: ''\n    // ...\n  });\n\n  const [imageFile, setImageFile] = useState(null);\n  const [addNewsletter, isLoading, error] = useFetching(async e => {\n    // e.preventDefault();\n    await NewsService.postItem(newsletter, imageFile, user.token);\n    // console.log(n);\n    // console.log(error);\n    setVisible(false);\n  });\n  function handleChange(e) {\n    setNewsletter({\n      ...newsletter,\n      [e.target.name]: e.target.value\n    });\n  }\n  ;\n  const handleFileChange = event => {\n    // Update the state with the selected image file\n    setImageFile(event.target.files[0]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.newsForm,\n    onSubmit: addNewsletter,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Title\",\n      name: \"title\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Summary\",\n      name: \"summary\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Main part\",\n      name: \"main_part\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      name: \"image\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageFile.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(NewsForm, \"yQFhUyL/TtIonEFAwJGS1MAi6ZY=\", false, function () {\n  return [useFetching];\n});\n_c = NewsForm;\nexport default NewsForm;\nvar _c;\n$RefreshReg$(_c, \"NewsForm\");","map":{"version":3,"names":["React","useContext","useState","classes","useFetching","NewsService","Context","jsxDEV","_jsxDEV","NewsForm","setVisible","_s","user","newsletter","setNewsletter","title","summary","main_part","imageFile","setImageFile","addNewsletter","isLoading","error","e","postItem","token","handleChange","target","name","value","handleFileChange","event","files","className","newsForm","onSubmit","children","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","type","src","_c","$RefreshReg$"],"sources":["C:/Users/Misha/source/repos/5 semester/WEB/lab4_client/src/components/News Components/NewsForm/NewsForm.jsx"],"sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport classes from \"./NewsForm.module.css\";\r\nimport {useFetching} from \"../../../hooks/useFetching\";\r\nimport NewsService from \"../../../API/NewsService\";\r\nimport {Context} from \"../../../context\";\r\nconst NewsForm = ({ setVisible }) => {\r\n    const {user} = useContext(Context);\r\n    const [newsletter, setNewsletter] = useState({\r\n        // Initialize with your POST data\r\n        title: '',\r\n        summary: '',\r\n        main_part: '',\r\n        // ...\r\n    });\r\n    const [imageFile, setImageFile] = useState(null);\r\n    const [addNewsletter, isLoading, error] = useFetching(async (e)=>{\r\n        // e.preventDefault();\r\n        await NewsService.postItem(newsletter, imageFile, user.token);\r\n        // console.log(n);\r\n        // console.log(error);\r\n        setVisible(false);\r\n    });\r\n    function handleChange(e){\r\n        setNewsletter({\r\n            ...newsletter,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n    const handleFileChange = (event) => {\r\n        // Update the state with the selected image file\r\n        setImageFile(event.target.files[0]);\r\n    };\r\n    return (\r\n        <form className={classes.newsForm} onSubmit={addNewsletter}>\r\n            <input placeholder='Title' name=\"title\" onChange={handleChange} required/>\r\n            <input placeholder='Summary' name=\"summary\" onChange={handleChange} required/>\r\n            <textarea placeholder='Main part' name=\"main_part\" onChange={handleChange} required></textarea>\r\n            <input type=\"file\" name='image' onChange={handleFileChange} />\r\n            <img src={imageFile.value} />\r\n            <button>Add</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NewsForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}