{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\source\\\\repos\\\\5 semester\\\\WEB\\\\lab4_client\\\\src\\\\pages\\\\MainPage\\\\MainPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport classes from \"./MainPage.module.css\";\nimport Menu from \"../../components/Menu Components/Menu/Menu\";\nimport MainLabel from \"../../components/MainLabel/MainLabel\";\nimport ApiPlate from \"../../components/ApiPlate/ApiPlate\";\nimport { useFetching } from \"../../hooks/useFetching\";\nimport { Context } from \"../../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainPage = () => {\n  _s();\n  const [joke, setJoke] = useState({\n    setup: '',\n    punchline: ''\n  });\n  const [fetchJoke, jokeError] = useFetching(async () => {\n    const response = await fetch('https://official-joke-api.appspot.com/random_joke'); // Replace with your API endpoint\n    const jsonData = await response.json();\n    console.log(jsonData);\n    setJoke(jsonData);\n  });\n  const [fact, setFact] = useState({\n    fact: ''\n  });\n  const [fetchFact, factError] = useFetching(async () => {\n    const response = await fetch('https://catfact.ninja/fact'); // Replace with your API endpoint\n    const jsonData = await response.json();\n    // console.log(jsonData);\n    setFact(jsonData);\n  });\n  useEffect(() => {\n    fetchJoke();\n    console.log('useEffect');\n    fetchFact();\n  }, []);\n  const {\n    user\n  } = useContext(Context);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainPage,\n    children: [user.username ? /*#__PURE__*/_jsxDEV(MainLabel, {\n      children: [\"Hello, \", user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 18\n    }, this) : /*#__PURE__*/_jsxDEV(MainLabel, {\n      children: \"WELCOME TO MY WEBSITE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.apiPlates,\n      children: [/*#__PURE__*/_jsxDEV(ApiPlate, {\n        line_1: joke.setup,\n        line_2: joke.punchline,\n        error: jokeError,\n        header: \"Maybe a joke?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ApiPlate, {\n        line_1: fact.fact,\n        error: factError,\n        header: \"Maybe a fact about cats?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(MainPage, \"b2sQWMoae74PbbL0ZIzOTlwkNrI=\", false, function () {\n  return [useFetching, useFetching];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useContext","useEffect","useState","classes","Menu","MainLabel","ApiPlate","useFetching","Context","jsxDEV","_jsxDEV","MainPage","_s","joke","setJoke","setup","punchline","fetchJoke","jokeError","response","fetch","jsonData","json","console","log","fact","setFact","fetchFact","factError","user","className","mainPage","children","username","fileName","_jsxFileName","lineNumber","columnNumber","apiPlates","line_1","line_2","error","header","_c","$RefreshReg$"],"sources":["C:/Users/Misha/source/repos/5 semester/WEB/lab4_client/src/pages/MainPage/MainPage.jsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport classes from \"./MainPage.module.css\";\r\nimport Menu from \"../../components/Menu Components/Menu/Menu\";\r\nimport MainLabel from \"../../components/MainLabel/MainLabel\";\r\nimport ApiPlate from \"../../components/ApiPlate/ApiPlate\";\r\nimport {useFetching} from \"../../hooks/useFetching\";\r\nimport {Context} from \"../../context\";\r\n\r\nconst MainPage = () => {\r\n    const [joke, setJoke] = useState({\r\n       setup: '',\r\n       punchline: ''\r\n    });\r\n    const [fetchJoke, jokeError] = useFetching(async ()=>{\r\n        const response = await fetch('https://official-joke-api.appspot.com/random_joke'); // Replace with your API endpoint\r\n        const jsonData = await response.json();\r\n        console.log(jsonData);\r\n        setJoke(jsonData);\r\n    });\r\n    const [fact, setFact] = useState({\r\n       fact: ''\r\n    });\r\n    const [fetchFact, factError] = useFetching(async ()=>{\r\n        const response = await fetch('https://catfact.ninja/fact'); // Replace with your API endpoint\r\n        const jsonData = await response.json();\r\n        // console.log(jsonData);\r\n        setFact(jsonData);\r\n    });\r\n    useEffect(() => {\r\n        fetchJoke();\r\n        console.log('useEffect');\r\n        fetchFact();\r\n    }, []);\r\n    const {user} = useContext(Context);\r\n    return (\r\n        <div className={classes.mainPage}>\r\n            {user.username\r\n                ?<MainLabel>Hello, {user.username}</MainLabel>\r\n                :<MainLabel>WELCOME TO MY WEBSITE</MainLabel>\r\n            }\r\n\r\n            <div className={classes.apiPlates}>\r\n                <ApiPlate line_1={joke.setup} line_2={joke.punchline} error={jokeError} header='Maybe a joke?'/>\r\n                <ApiPlate line_1={fact.fact} error={factError} header='Maybe a fact about cats?'/>\r\n            </div>\r\n            <Menu/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}