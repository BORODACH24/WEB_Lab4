{"ast":null,"code":"export default class OrderService {\n  static async getAll() {\n    const response = await fetch('http://localhost:5000/api/order'); // Replace with your API endpoint\n    return await response.json();\n  }\n  static async getById(id) {\n    const response = await fetch('http://localhost:5000/api/order/' + id); // Replace with your API endpoint\n    return await response.json();\n  }\n  static async postItem(client, order, authToken) {\n    // console.log(authToken);\n\n    // Create a new FormData object\n    const formData = new FormData();\n\n    // Append other properties from the newsletter object\n    Object.keys(client).forEach(key => {\n      formData.append(key, client[key]);\n    });\n\n    // Append other properties from the newsletter object\n    Object.keys(order).forEach(key => {\n      formData.append(key, order[key]);\n    });\n    console.log(\"Formdata: \", formData);\n    const response = await fetch('http://localhost:5000/api/order', {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${authToken}`\n      },\n      body: formData // Convert your data to JSON format\n    });\n  }\n\n  static async deleteById(id) {\n    const response = await fetch('http://localhost:5000/api/order/' + id, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json' // Set the content type based on your API requirements\n        // You may include other headers as needed\n      }\n      // You can include a request body if needed for some APIs, but DELETE requests often don't have a body\n      // body: JSON.stringify({}),\n    });\n  }\n}","map":{"version":3,"names":["OrderService","getAll","response","fetch","json","getById","id","postItem","client","order","authToken","formData","FormData","Object","keys","forEach","key","append","console","log","method","headers","Authorization","body","deleteById"],"sources":["C:/Users/Misha/source/repos/5 semester/WEB/lab4_client/src/API/OrderService.js"],"sourcesContent":["\r\nexport default class OrderService {\r\n    static async getAll(){\r\n        const response = await fetch('http://localhost:5000/api/order'); // Replace with your API endpoint\r\n        return await response.json();\r\n    }\r\n    static async getById(id){\r\n        const response = await fetch('http://localhost:5000/api/order/' + id); // Replace with your API endpoint\r\n        return await response.json();\r\n    }\r\n    static async postItem(client, order, authToken){\r\n        // console.log(authToken);\r\n\r\n        // Create a new FormData object\r\n        const formData = new FormData();\r\n\r\n        // Append other properties from the newsletter object\r\n        Object.keys(client).forEach((key) => {\r\n            formData.append(key, client[key]);\r\n        });\r\n\r\n        // Append other properties from the newsletter object\r\n        Object.keys(order).forEach((key) => {\r\n            formData.append(key, order[key]);\r\n        });\r\n\r\n        console.log(\"Formdata: \", formData);\r\n\r\n        const response = await fetch('http://localhost:5000/api/order', {\r\n            method: 'POST',\r\n            headers: {\r\n                Authorization: `Bearer ${authToken}`,\r\n            },\r\n            body: formData, // Convert your data to JSON format\r\n        });\r\n    }\r\n    static async deleteById(id){\r\n        const response = await fetch('http://localhost:5000/api/order/' + id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json', // Set the content type based on your API requirements\r\n                // You may include other headers as needed\r\n            },\r\n            // You can include a request body if needed for some APIs, but DELETE requests often don't have a body\r\n            // body: JSON.stringify({}),\r\n        });    }\r\n}"],"mappings":"AACA,eAAe,MAAMA,YAAY,CAAC;EAC9B,aAAaC,MAAMA,CAAA,EAAE;IACjB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;IACjE,OAAO,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAChC;EACA,aAAaC,OAAOA,CAACC,EAAE,EAAC;IACpB,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,GAAGG,EAAE,CAAC,CAAC,CAAC;IACvE,OAAO,MAAMJ,QAAQ,CAACE,IAAI,CAAC,CAAC;EAChC;EACA,aAAaG,QAAQA,CAACC,MAAM,EAAEC,KAAK,EAAEC,SAAS,EAAC;IAC3C;;IAEA;IACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;;IAE/B;IACAC,MAAM,CAACC,IAAI,CAACN,MAAM,CAAC,CAACO,OAAO,CAAEC,GAAG,IAAK;MACjCL,QAAQ,CAACM,MAAM,CAACD,GAAG,EAAER,MAAM,CAACQ,GAAG,CAAC,CAAC;IACrC,CAAC,CAAC;;IAEF;IACAH,MAAM,CAACC,IAAI,CAACL,KAAK,CAAC,CAACM,OAAO,CAAEC,GAAG,IAAK;MAChCL,QAAQ,CAACM,MAAM,CAACD,GAAG,EAAEP,KAAK,CAACO,GAAG,CAAC,CAAC;IACpC,CAAC,CAAC;IAEFE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAER,QAAQ,CAAC;IAEnC,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DiB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACLC,aAAa,EAAG,UAASZ,SAAU;MACvC,CAAC;MACDa,IAAI,EAAEZ,QAAQ,CAAE;IACpB,CAAC,CAAC;EACN;;EACA,aAAaa,UAAUA,CAAClB,EAAE,EAAC;IACvB,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,GAAGG,EAAE,EAAE;MAClEc,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB,CAAE;QACpC;MACJ;MACA;MACA;IACJ,CAAC,CAAC;EAAK;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}