{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Misha\\\\source\\\\repos\\\\5 semester\\\\WEB\\\\lab4_client\\\\src\\\\components\\\\Login Components\\\\LoginForm\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport classes from \"./LoginForm.module.css\";\nimport { Context } from \"../../../context\";\nimport { useFetching } from \"../../../hooks/useFetching\";\nimport NewsService from \"../../../API/NewsService\";\nimport UserService from \"../../../API/UserService\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n// const jwt = require('jsonwebtoken');\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const params = useParams();\n  useEffect(() => {\n    if (params.token !== \"_\") {\n      console.log(params.token);\n      user.username = \"Test\";\n      user.token = params.token;\n      setIsAuth(true);\n      const decoded = jwtDecode(params.token);\n      // var decoded = jwt.verify(params.token, 'your-secret-key');\n      console.log(decoded);\n      // sessionStorage.setItem('auth', 'true');\n      sessionStorage.setItem('username', decoded.username);\n      sessionStorage.setItem('token', params.token);\n      router('/');\n    }\n    console.log(params.token);\n  }, []);\n\n  // const [userName, setUserName] = useState('');\n  // const [password, setPassword] = useState('');\n  const [userForm, setUserForm] = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    setIsAuth\n  } = useContext(Context);\n  const {\n    user,\n    setUser\n  } = useContext(Context);\n  const router = useNavigate();\n  // const login = async (e) => {\n  //     e.preventDefault();\n  // try {\n  //     const response = await axios.post('http://192.168.0.53:8000/auth/token/login/', {\n  //             username: userName,\n  //             password: password\n  //         },\n  //         /*{\n  //             headers: {\n  //                 'X-CSRFTOken': 'uhTD3vSjaOhnEC2Bda0bgRW5rzvFMTCRnQoX2aRDP2RDHMtP2YEqhaHDQvMbb9h0',\n  //                 'Content-Type': 'application/json'\n  //             }\n  //         }*/\n  //     );\n  //     console.log(response.data);\n  //     console.log('Success');\n  //     setIsAuth(true);\n  // console.log(\"aith\");\n  // sessionStorage.setItem('auth', 'true')\n  //     setToken(response.data['auth_token']);\n  // } catch (err){\n  //     console.error(\"Error\");\n  //     console.log(userName);\n  //     console.log(password);\n  //     console.log(err);\n  // }\n\n  // }\n  const [login, isLoading, error] = useFetching(async e => {\n    e.preventDefault();\n    // console.log(userForm);\n    const jsonData = await UserService.login(userForm);\n\n    // console.log(jsonData.token);\n    user.username = userForm.username;\n    user.token = jsonData.token;\n    setIsAuth(true);\n    // sessionStorage.setItem('auth', 'true');\n    sessionStorage.setItem('username', userForm.username);\n    sessionStorage.setItem('token', jsonData.token);\n    router('/');\n    // console.log(jsonData.token);\n    // console.log(user);\n  });\n\n  const [loginGoogle, isLo, errorGoogle] = useFetching(async e => {\n    e.preventDefault();\n    // console.log(userForm);\n    const jsonData = await UserService.loginGoogle();\n    console.log(jsonData.token);\n    //user.username = userForm.username;\n    //user.token = jsonData.token;\n    //setIsAuth(true);\n    // sessionStorage.setItem('auth', 'true');\n    //sessionStorage.setItem('username', userForm.username);\n    //sessionStorage.setItem('token', jsonData.token);\n\n    //router('/');\n    // console.log(jsonData.token);\n    // console.log(user);\n  });\n\n  function handleChange(e) {\n    setUserForm({\n      ...userForm,\n      [e.target.name]: e.target.value\n    });\n    // console.log(userForm);\n  }\n  // const googleAuth = () => {\n  //     window.open(\n  //         `http://localhost:5000/api/users/auth/google/callback`,\n  //         \"_self\"\n  //     );\n  // };\n  // const googleAuth2 = async() => {\n  //     const response = await fetch(`http://localhost:5000/api/users/auth/google`);\n  //     if (!response.ok) {\n  //         throw new Error(`Failed to initiate Google authentication: ${response.status}`);\n  //     }\n  //\n  //     // Parse the JSON response to get the redirect URL\n  //     const responseData = await response.json();\n  //     console.log(responseData);\n  // };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"post\",\n    onSubmit: login,\n    className: classes.loginForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputbox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.TextInput,\n        name: \"username\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputbox,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: classes.TextInput,\n        name: \"password\",\n        type: \"password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.loginButton,\n      type: \"submit\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginForm, \"0A8jwoS+Bc/zpe5pNbUPoUQE/R0=\", false, function () {\n  return [useParams, useNavigate, useFetching, useFetching];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useContext","useEffect","useState","classes","Context","useFetching","NewsService","UserService","useNavigate","useParams","jwtDecode","jsxDEV","_jsxDEV","LoginForm","_s","params","token","console","log","user","username","setIsAuth","decoded","sessionStorage","setItem","router","userForm","setUserForm","password","setUser","login","isLoading","error","e","preventDefault","jsonData","loginGoogle","isLo","errorGoogle","handleChange","target","name","value","method","onSubmit","className","loginForm","children","inputbox","TextInput","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","type","loginButton","_c","$RefreshReg$"],"sources":["C:/Users/Misha/source/repos/5 semester/WEB/lab4_client/src/components/Login Components/LoginForm/LoginForm.jsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport classes from \"./LoginForm.module.css\"\r\nimport {Context} from \"../../../context\";\r\nimport {useFetching} from \"../../../hooks/useFetching\";\r\nimport NewsService from \"../../../API/NewsService\";\r\nimport UserService from \"../../../API/UserService\";\r\nimport {useNavigate, useParams} from \"react-router-dom\";\r\n// const jwt = require('jsonwebtoken');\r\nimport { jwtDecode } from \"jwt-decode\";\r\nconst LoginForm = () => {\r\n    const params = useParams();\r\n    useEffect(() => {\r\n        if(params.token !== \"_\"){\r\n            console.log(params.token);\r\n            user.username = \"Test\";\r\n            user.token = params.token;\r\n            setIsAuth(true);\r\n            const decoded = jwtDecode(params.token);\r\n            // var decoded = jwt.verify(params.token, 'your-secret-key');\r\n            console.log(decoded);\r\n            // sessionStorage.setItem('auth', 'true');\r\n            sessionStorage.setItem('username', decoded.username);\r\n            sessionStorage.setItem('token', params.token);\r\n\r\n            router('/');\r\n        }\r\n        console.log(params.token);\r\n    }, []);\r\n\r\n    // const [userName, setUserName] = useState('');\r\n    // const [password, setPassword] = useState('');\r\n    const [userForm, setUserForm] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const { setIsAuth } = useContext(Context);\r\n    const { user, setUser } = useContext(Context);\r\n    const router = useNavigate();\r\n    // const login = async (e) => {\r\n    //     e.preventDefault();\r\n        // try {\r\n        //     const response = await axios.post('http://192.168.0.53:8000/auth/token/login/', {\r\n        //             username: userName,\r\n        //             password: password\r\n        //         },\r\n        //         /*{\r\n        //             headers: {\r\n        //                 'X-CSRFTOken': 'uhTD3vSjaOhnEC2Bda0bgRW5rzvFMTCRnQoX2aRDP2RDHMtP2YEqhaHDQvMbb9h0',\r\n        //                 'Content-Type': 'application/json'\r\n        //             }\r\n        //         }*/\r\n        //     );\r\n        //     console.log(response.data);\r\n        //     console.log('Success');\r\n        //     setIsAuth(true);\r\n            // console.log(\"aith\");\r\n            // sessionStorage.setItem('auth', 'true')\r\n        //     setToken(response.data['auth_token']);\r\n        // } catch (err){\r\n        //     console.error(\"Error\");\r\n        //     console.log(userName);\r\n        //     console.log(password);\r\n        //     console.log(err);\r\n        // }\r\n\r\n    // }\r\n    const [login,isLoading, error] = useFetching(async (e)=>{\r\n        e.preventDefault();\r\n        // console.log(userForm);\r\n        const jsonData = await UserService.login(userForm);\r\n\r\n        // console.log(jsonData.token);\r\n        user.username = userForm.username;\r\n        user.token = jsonData.token;\r\n        setIsAuth(true);\r\n        // sessionStorage.setItem('auth', 'true');\r\n        sessionStorage.setItem('username', userForm.username);\r\n        sessionStorage.setItem('token', jsonData.token);\r\n\r\n        router('/');\r\n        // console.log(jsonData.token);\r\n        // console.log(user);\r\n    });\r\n    const [loginGoogle, isLo, errorGoogle] = useFetching(async (e)=>{\r\n        e.preventDefault();\r\n        // console.log(userForm);\r\n        const jsonData = await UserService.loginGoogle();\r\n\r\n        console.log(jsonData.token);\r\n        //user.username = userForm.username;\r\n        //user.token = jsonData.token;\r\n        //setIsAuth(true);\r\n        // sessionStorage.setItem('auth', 'true');\r\n        //sessionStorage.setItem('username', userForm.username);\r\n        //sessionStorage.setItem('token', jsonData.token);\r\n\r\n        //router('/');\r\n        // console.log(jsonData.token);\r\n        // console.log(user);\r\n    });\r\n    function handleChange(e){\r\n        setUserForm({\r\n            ...userForm,\r\n            [e.target.name]: e.target.value\r\n        });\r\n        // console.log(userForm);\r\n    }\r\n    // const googleAuth = () => {\r\n    //     window.open(\r\n    //         `http://localhost:5000/api/users/auth/google/callback`,\r\n    //         \"_self\"\r\n    //     );\r\n    // };\r\n    // const googleAuth2 = async() => {\r\n    //     const response = await fetch(`http://localhost:5000/api/users/auth/google`);\r\n    //     if (!response.ok) {\r\n    //         throw new Error(`Failed to initiate Google authentication: ${response.status}`);\r\n    //     }\r\n    //\r\n    //     // Parse the JSON response to get the redirect URL\r\n    //     const responseData = await response.json();\r\n    //     console.log(responseData);\r\n    // };\r\n    return (\r\n        <form method=\"post\" onSubmit={login} className={classes.loginForm}>\r\n            {/*{% csrf_token %}*/}\r\n            <div className={classes.inputbox}>\r\n                {/*<ion-icon name=\"log-in-outline\"></ion-icon>*/}\r\n                <input className={classes.TextInput} name=\"username\" onChange={handleChange} required/>\r\n\r\n                <label>Login</label>\r\n            </div>\r\n            <div className={classes.inputbox}>\r\n                <input className={classes.TextInput} name=\"password\" type='password' onChange={handleChange} required/>\r\n\r\n                {/*<ion-icon name=\"lock-closed-outline\"></ion-icon>*/}\r\n                <label>Password</label>\r\n            </div>\r\n\r\n            <button className={classes.loginButton} type=\"submit\">Log in</button>\r\n            {/*<script type=\"module\" src=\"https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.esm.js\"></script>*/}\r\n            {/*<script noModule src=\"https://unpkg.com/ionicons@5.5.2/dist/ionicons/ionicons.js\"></script>*/}\r\n        {/*<button type='button' onClick={loginGoogle}>Google</button>*/}\r\n        {/*    <p>Don't have a account <a href=\"/signup\">Google</a></p>*/}\r\n\r\n            {/*<button type='button' onClick={googleAuth}>googleAuth</button>*/}\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC5D,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAAQC,OAAO,QAAO,kBAAkB;AACxC,SAAQC,WAAW,QAAO,4BAA4B;AACtD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,SAAQC,WAAW,EAAEC,SAAS,QAAO,kBAAkB;AACvD;AACA,SAASC,SAAS,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;EAC1BR,SAAS,CAAC,MAAM;IACZ,IAAGc,MAAM,CAACC,KAAK,KAAK,GAAG,EAAC;MACpBC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACC,KAAK,CAAC;MACzBG,IAAI,CAACC,QAAQ,GAAG,MAAM;MACtBD,IAAI,CAACH,KAAK,GAAGD,MAAM,CAACC,KAAK;MACzBK,SAAS,CAAC,IAAI,CAAC;MACf,MAAMC,OAAO,GAAGZ,SAAS,CAACK,MAAM,CAACC,KAAK,CAAC;MACvC;MACAC,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;MACpB;MACAC,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEF,OAAO,CAACF,QAAQ,CAAC;MACpDG,cAAc,CAACC,OAAO,CAAC,OAAO,EAAET,MAAM,CAACC,KAAK,CAAC;MAE7CS,MAAM,CAAC,GAAG,CAAC;IACf;IACAR,OAAO,CAACC,GAAG,CAACH,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC;IACrCkB,QAAQ,EAAE,EAAE;IACZQ,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAM;IAAEP;EAAU,CAAC,GAAGrB,UAAU,CAACI,OAAO,CAAC;EACzC,MAAM;IAAEe,IAAI;IAAEU;EAAQ,CAAC,GAAG7B,UAAU,CAACI,OAAO,CAAC;EAC7C,MAAMqB,MAAM,GAAGjB,WAAW,CAAC,CAAC;EAC5B;EACA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACI;EACA;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;;EAEJ;EACA,MAAM,CAACsB,KAAK,EAACC,SAAS,EAAEC,KAAK,CAAC,GAAG3B,WAAW,CAAC,MAAO4B,CAAC,IAAG;IACpDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,QAAQ,GAAG,MAAM5B,WAAW,CAACuB,KAAK,CAACJ,QAAQ,CAAC;;IAElD;IACAP,IAAI,CAACC,QAAQ,GAAGM,QAAQ,CAACN,QAAQ;IACjCD,IAAI,CAACH,KAAK,GAAGmB,QAAQ,CAACnB,KAAK;IAC3BK,SAAS,CAAC,IAAI,CAAC;IACf;IACAE,cAAc,CAACC,OAAO,CAAC,UAAU,EAAEE,QAAQ,CAACN,QAAQ,CAAC;IACrDG,cAAc,CAACC,OAAO,CAAC,OAAO,EAAEW,QAAQ,CAACnB,KAAK,CAAC;IAE/CS,MAAM,CAAC,GAAG,CAAC;IACX;IACA;EACJ,CAAC,CAAC;;EACF,MAAM,CAACW,WAAW,EAAEC,IAAI,EAAEC,WAAW,CAAC,GAAGjC,WAAW,CAAC,MAAO4B,CAAC,IAAG;IAC5DA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,MAAMC,QAAQ,GAAG,MAAM5B,WAAW,CAAC6B,WAAW,CAAC,CAAC;IAEhDnB,OAAO,CAACC,GAAG,CAACiB,QAAQ,CAACnB,KAAK,CAAC;IAC3B;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;EACJ,CAAC,CAAC;;EACF,SAASuB,YAAYA,CAACN,CAAC,EAAC;IACpBN,WAAW,CAAC;MACR,GAAGD,QAAQ;MACX,CAACO,CAAC,CAACO,MAAM,CAACC,IAAI,GAAGR,CAAC,CAACO,MAAM,CAACE;IAC9B,CAAC,CAAC;IACF;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACI9B,OAAA;IAAM+B,MAAM,EAAC,MAAM;IAACC,QAAQ,EAAEd,KAAM;IAACe,SAAS,EAAE1C,OAAO,CAAC2C,SAAU;IAAAC,QAAA,gBAE9DnC,OAAA;MAAKiC,SAAS,EAAE1C,OAAO,CAAC6C,QAAS;MAAAD,QAAA,gBAE7BnC,OAAA;QAAOiC,SAAS,EAAE1C,OAAO,CAAC8C,SAAU;QAACR,IAAI,EAAC,UAAU;QAACS,QAAQ,EAAEX,YAAa;QAACY,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEvF3C,OAAA;QAAAmC,QAAA,EAAO;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACN3C,OAAA;MAAKiC,SAAS,EAAE1C,OAAO,CAAC6C,QAAS;MAAAD,QAAA,gBAC7BnC,OAAA;QAAOiC,SAAS,EAAE1C,OAAO,CAAC8C,SAAU;QAACR,IAAI,EAAC,UAAU;QAACe,IAAI,EAAC,UAAU;QAACN,QAAQ,EAAEX,YAAa;QAACY,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAGvG3C,OAAA;QAAAmC,QAAA,EAAO;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,eAEN3C,OAAA;MAAQiC,SAAS,EAAE1C,OAAO,CAACsD,WAAY;MAACD,IAAI,EAAC,QAAQ;MAAAT,QAAA,EAAC;IAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOnE,CAAC;AAEf,CAAC;AAACzC,EAAA,CA3IID,SAAS;EAAA,QACIJ,SAAS,EA2BTD,WAAW,EA6BOH,WAAW,EAiBHA,WAAW;AAAA;AAAAqD,EAAA,GA1ElD7C,SAAS;AA6If,eAAeA,SAAS;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}